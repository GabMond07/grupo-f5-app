---
// Componente: MusicGenreCard.astro
// Props:
// - genreId: ID único del género
// - genreName: Nombre del género
// - songCount: Número total de canciones
// - imageUrl: URL de la imagen alusiva al género
---

<div
  class="genre-card relative rounded-lg overflow-hidden bg-gray-900 cursor-pointer hover:shadow-lg transition-shadow duration-300"
  data-genre-id={Astro.props.genreId}
>
  <div class="aspect-square">
    <img
      src={Astro.props.imageUrl}
      alt={`Género: ${Astro.props.genreName}`}
      class="w-full h-full object-cover"
    />
  </div>
  <div class="p-3 text-white">
    <h1 class="text-xl font-bold truncate">{Astro.props.genreName}</h1>
    <p class="text-sm text-gray-400">{Astro.props.songCount} canciones</p>
  </div>
</div>

<script>
  // Script para manejar los clics en las tarjetas de género
  document.addEventListener("DOMContentLoaded", () => {
    const genreCards = document.querySelectorAll(".genre-card");
    
    // Flag para controlar si un diálogo está abierto
    let dialogIsOpen = false;

    genreCards.forEach((card) => {
      card.addEventListener("click", () => {
        const genreId = card.getAttribute("data-genre-id");
        const dialog = document.getElementById(`dialog-${genreId}`);
        if (dialog) {
          // Añadir una entrada al historial antes de abrir el diálogo
          if (!dialogIsOpen) {
            history.pushState({ dialogOpen: true }, '');
            dialogIsOpen = true;
          }
          
          dialog.showModal();
          document.body.classList.add("overflow-hidden");
        }
      });
    });

    // Función para cerrar el diálogo correctamente
    function closeDialog(dialog) {
      if (dialog) {
        dialog.close();
        document.body.classList.remove("overflow-hidden");
        dialogIsOpen = false;
      }
    }

    // Cerrar los diálogos con botones de cierre
    const closeButtons = document.querySelectorAll(".dialog-close");
    closeButtons.forEach((button) => {
      button.addEventListener("click", () => {
        const dialog = button.closest("dialog");
        closeDialog(dialog);
        // Si presionamos el botón de cerrar, también volvemos en el historial
        // if (window.history.state && window.history.state.dialogOpen) {
        //   window.history.back();
        // }
      });
    });

    // Cerrar al hacer clic fuera del diálogo
    const dialogs = document.querySelectorAll("dialog");
    dialogs.forEach((dialog) => {
      dialog.addEventListener("click", (e) => {
        const dialogDimensions = dialog.getBoundingClientRect();
        if (
          e.clientX < dialogDimensions.left ||
          e.clientX > dialogDimensions.right ||
          e.clientY < dialogDimensions.top ||
          e.clientY > dialogDimensions.bottom
        ) {
          closeDialog(dialog);
          // Si hacemos clic fuera, también volvemos en el historial
          if (window.history.state && window.history.state.dialogOpen) {
            window.history.back();
          }
        }
      });
      
      // Capturar el evento de cierre del diálogo nativo
      dialog.addEventListener("close", () => {
        document.body.classList.remove("overflow-hidden");
        dialogIsOpen = false;
      });
    });

    // Escuchar el evento popstate para manejar el botón de Atrás
    window.addEventListener("popstate", () => {
      const openDialogs = document.querySelectorAll("dialog[open]");
      openDialogs.forEach((dialog) => {
        closeDialog(dialog);
      });
    });
  });
</script>