---
import Stars from "../components/Stars.astro";
// Definimos los eventos como un array de objetos
const events = [
  {
    id: 1,
    title: "Lounge Bar Club Retro",
    date: "2025-03-29",
    description: "San Miguel Xoxtla, Pue. Mex.",
    image: "Logo Loungue Bar.avif",
  },
];
---

<section
  id="events"
  class="min-h-screen py-24 flex flex-col justify-center items-center p-10 gap-10 relative"
>
<Stars />
  <div class="text-center relative">
    <h1 class="text-4xl text-white font-bold sm:text-5xl mb-5 glow-effect lg:glow-effect">
      ¡Contáctanos!
    </h1>
    </p>
    <div class="relative w-[350px] h-[350px] lg:w-[400px] lg:h-[400px] rounded-2xl border-3 border-white">
      <div class=""></div>
      <video
        id="videoPromocion"
        src="/Eventos-promocion.webm"
        loop
        class="w-full cursor-pointer rounded-2xl"></video>
        <div id="playIndicator" class="absolute inset-0 flex items-center justify-center bg-black/40 bg-opacity-50 cursor-pointer">
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="white" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <circle cx="12" cy="12" r="10"></circle>
            <polygon points="10 8 16 12 10 16 10 8"></polygon>
          </svg>
        </div>
    </div>
  </div>
  <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="max-w-5xl mx-auto">
      <h2
        class="text-4xl font-bold text-center mb-12 animate-bounce animate-infinite animate-duration-[1500ms] animate-delay-[314ms] animate-ease-linear animate-normal"
      >
        Próximos Eventos
      </h2>

      <div
        id="card-event"
        class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6"
      >
        {
          events.map((event) => (
            <article class="bg-white/20 rounded-2xl transition-transform hover:scale-105">
              <img
                src={event.image}
                alt={event.title}
                class="w-full h-70 object-cover rounded-2xl self-center"
              />
              <div class="p-4">
                <h3 class="text-xl font-semibold mb-2 text-white glow-effect">
                  {event.title}
                </h3>
                <p class="text-white mb-2">
                  {new Date(event.date).toLocaleDateString("es-ES", {
                    year: "numeric",
                    month: "long",
                    day: "numeric",
                  })}
                </p>
                <p class="text-white">{event.description}</p>
              </div>
            </article>
          ))
        }
      </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const video = document.getElementById('videoPromocion');
    const playIndicator = document.getElementById('playIndicator');
    
    if (video && playIndicator) {
      // Pausa el video inicialmente
      video.pause();
      
      // Función para reproducir el video
      const playVideo = () => {
        video.play()
          .then(() => {
            // Si se reproduce con éxito, quitar el indicador
            playIndicator.style.display = 'none';
            // También podemos activar el sonido
            video.muted = false;
          })
          .catch(error => {
            console.error('Error al reproducir el video:', error);
          });
      };
      
      // Añadir evento de clic al indicador
      playIndicator.addEventListener('click', playVideo);
      
      // Evento para pausar/reproducir al hacer clic en el video
      video.addEventListener('click', () => {
        if (video.paused) {
          playVideo();
        } else {
          video.pause();
          playIndicator.style.display = 'flex';
        }
      });
      
      // Si el video termina (aunque tengas loop, por si acaso)
      video.addEventListener('ended', () => {
        playIndicator.style.display = 'flex';
      });
    }
  });
</script>